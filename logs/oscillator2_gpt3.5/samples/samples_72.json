{"sample_order": 72, "function": "def equation(t: np.ndarray, x: np.ndarray, v: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for acceleration in a damped nonlinear oscillator\n\n    Args:\n        t: A numpy array representing time.\n        x: A numpy array representing observations of current position.\n        v: A numpy array representing observations of velocity.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing acceleration as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    # Mathematical function for acceleration in a damped nonlinear oscillator system with a driving force\n    # The equation is based on Newton's Second Law: F = ma\n    # The acceleration is given by a = (-damping * v - spring constant * x + external force) / mass\n    \n    damping = params[0]\n    spring_constant = params[1]\n    external_force = params[2]\n    mass = params[3]\n    \n    acceleration = (-damping * v - spring_constant * x + external_force) / mass\n    \n    return acceleration\n\n", "score": -0.03207104717698552}