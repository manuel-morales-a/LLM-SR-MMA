{"sample_order": 28, "function": "def equation(t: np.ndarray, x: np.ndarray, v: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for acceleration in a damped nonlinear oscillator\n\n    Args:\n        t: A numpy array representing time.\n        x: A numpy array representing observations of current position.\n        v: A numpy array representing observations of velocity.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing acceleration as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    dv = params[0] * t**3 + params[1] * x**3 + params[2] * v**3 + params[3] * t**2 * x + params[4] * t**2 * v + params[5] * x**2 * v + params[6] * t * x**2 + params[7] * t * v**2 + params[8] * x * v**2 + params[9] * t + params[10] * x + params[11] * v + params[12]\n    return dv\n\n", "score": null}