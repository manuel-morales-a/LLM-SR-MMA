{"sample_order": 29, "function": "def equation(bin_centres: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for angular distribution\n\n    Args:\n        bin_centres: A numpy array representing a set of bin centres in an angular distribution.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing the differential cross section in that bin\n    \"\"\"\n    theta = bin_centres\n    A = params[0]\n    B = params[1]\n    \n    # Using a more complex mathematical function to describe the angular distribution\n    return A * np.sin(theta) + B * np.cos(theta) + params[2] * theta**2 + params[3] * np.exp(-params[4] * theta) + params[5] * np.cos(2*theta) + params[6] * np.sin(2*theta) + params[7] * np.cos(3*theta) + params[8] * np.sin(3*theta) + params[9] * np.cos(4*theta) + params[10] * np.sin(4*theta)\n\n", "score": null}